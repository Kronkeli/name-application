{"version":3,"sources":["logo.svg","List.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["List","props","state","items","list","order","console","log","JSON","stringify","nextProps","this","setState","listItems","map","item","index","name","amount","reverse","length","Component","App","isLoaded","names","ascendingOrder","isFindByName","inputName","nameSearch","message","getSortedAlphabetical","bind","getSortedAmounts","getCount","findByName","handleChange","handleSubmit","toggleOrder","xhr","XMLHttpRequest","addEventListener","response","nameList","open","responseType","send","count","event","value","target","preventDefault","setRequestHeader","params","buttons","className","onClick","src","logo","alt","onSubmit","type","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAAe,MAA0B,iCC0C1BA,G,8DAtCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,MAAOF,EAAMG,KAAMC,MAAOJ,EAAMI,OAC9CC,QAAQC,IAAI,qBAAuBC,KAAKC,UAAUR,IAHnC,E,sEAMOS,GACtBC,KAAKC,SAAS,CAACT,MAAOO,EAAUN,KAAMC,MAAOK,EAAUL,U,+BAKzD,IAAIQ,EACCF,KAAKT,MAAMG,MASdQ,EAAYF,KAAKT,MAAMC,MAAMW,KAAI,SAACC,EAAMC,GAAP,OACjC,wCACWD,EAAKE,KADhB,YAC+BF,EAAKG,SAD3BF,MARTH,EADoBF,KAAKT,MAAMC,MAAMW,KAAI,SAAAC,GAAI,OAAIA,KAAMI,UAC7BL,KAAI,SAACC,EAAMC,GAAP,OAC9B,wCACSD,EAAKE,KADd,YAC6BF,EAAKG,SADzBF,MAgBT,OAHyB,IAArBH,EAAUO,SACVP,EAAY,yCAGZ,6BAAKA,Q,GAlCEQ,cCkLJC,E,kDA/Kb,aAAe,IAAD,8BACZ,gBACKpB,MAAQ,CACXqB,UAAU,EACVC,MAAO,GACPC,gBAAgB,EAChBC,cAAc,EACdC,UAAW,GACXC,WAAY,uBACZC,QAAS,uCAEX,EAAKC,sBAAwB,EAAKA,sBAAsBC,KAA3B,gBAC7B,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAChB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBACpB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBAhBR,E,gEAoBZzB,QAAQC,IAAI,oB,8CAKW,IAAD,OACtBI,KAAK0B,cACL,IAAIC,EAAM,IAAIC,eAEdD,EAAIE,iBAAiB,QAAQ,WAC3B,IAAInC,EAAQ,EAAKH,MAAMuB,eAAiB,YAAc,aACtD,EAAKb,SAAS,CACZY,MAAOc,EAAIG,SAASC,SACpBb,QAAS,mCAAqCxB,EAAQ,UACtDA,MAAO,EAAKgC,YACZX,cAAc,EACdH,UAAU,OAIde,EAAIK,KAAK,MAAO,+CAEhBL,EAAIM,aAAe,OACnBN,EAAIO,S,yCAIc,IAAD,OACjBlC,KAAK0B,cACL,IAAIC,EAAM,IAAIC,eAEdD,EAAIE,iBAAiB,QAAQ,WAC3B,IAAInC,EAAS,EAAKH,MAAMuB,eAA+B,aAAd,YACzC,EAAKb,SAAS,CACZY,MAAOc,EAAIG,SAASC,SACpBb,QAAS,qCAAuCxB,EAAQ,UACxDA,MAAO,EAAKgC,YACZX,cAAc,EACdH,UAAU,OAIde,EAAIK,KAAK,MAAO,yCAEhBL,EAAIM,aAAe,OACnBN,EAAIO,S,iCAGM,IAAD,OACLP,EAAM,IAAIC,eAEdD,EAAIE,iBAAiB,QAAQ,WAC3B,EAAK5B,SAAS,CACZY,MAAO,GACPK,QAAS,aAAeS,EAAIG,SAASK,MAAQ,sBAC7CpB,cAAc,EACdH,UAAU,OAIde,EAAIK,KAAK,MAAO,qCAEhBL,EAAIM,aAAe,OACnBN,EAAIO,S,oCAIJlC,KAAKC,SAAS,CACZa,gBAAiBd,KAAKT,MAAMuB,mB,mCAK9Bd,KAAKC,SAAS,CACZc,cAAc,EACdG,QAAS,uC,mCAKAkB,GACXpC,KAAKC,SAAS,CAAEoC,MAAOD,EAAME,OAAOD,U,mCAGzBD,GAAQ,IAAD,OAClBA,EAAMG,iBACN,IAAIZ,EAAM,IAAIC,eAEdD,EAAIE,iBAAiB,QAAQ,WAC3B,EAAK5B,SAAS,CACZiB,QAAS,cAAgBS,EAAIG,SAASK,MAAQ,gCAAmC,EAAK5C,MAAM8C,MAAQ,IACpGzB,UAAU,OAIde,EAAIK,KAAK,OAAQ,mCAEjBL,EAAIM,aAAe,OACnBN,EAAIa,iBAAiB,eAAgB,qCACrC,IAAIC,EAAS,QAAUzC,KAAKT,MAAM8C,MAClCV,EAAIO,KAAKO,K,+BAIT,IAAIC,EAAU,sBAAKC,UAAU,UAAf,UACZ,wBAAQC,QAAS5C,KAAKmB,sBAAtB,2BACA,wBAAQyB,QAAS5C,KAAKqB,iBAAtB,6BACA,wBAAQuB,QAAS5C,KAAKsB,SAAtB,mBACA,wBAAQsB,QAAS5C,KAAKuB,WAAtB,6BAEF,OAAIvB,KAAKT,MAAMwB,aAEX,sBAAK4B,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKE,IAAKC,EAAMH,UAAU,WAAWI,IAAI,WAE1CL,EACD,6BAAK1C,KAAKT,MAAM2B,UAChB,uBAAM8B,SAAUhD,KAAKyB,aAArB,UACE,0CAEE,uBAAOwB,KAAK,OAAOZ,MAAOrC,KAAKT,MAAM8C,MAAOa,SAAUlD,KAAKwB,kBAE7D,uBAAOyB,KAAK,SAASZ,MAAM,cAE5BrC,KAAKT,MAAM0B,cAImB,IAA5BjB,KAAKT,MAAMsB,MAAMJ,OAEtB,sBAAKkC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKE,IAAKC,EAAMH,UAAU,WAAWI,IAAI,WAE1CL,EACD,6BAAK1C,KAAKT,MAAM2B,aAMlB,sBAAKyB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKE,IAAKC,EAAMH,UAAU,WAAWI,IAAI,WAE1CL,EACD,6BAAK1C,KAAKT,MAAM2B,UAChB,cAAC,EAAD,CAAMzB,KAAMO,KAAKT,MAAMsB,MAAOnB,MAAOM,KAAKT,MAAMuB,wB,GAzKxCJ,aCOHyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d86bb043.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\r\nimport './List.css';\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {items: props.list, order: props.order};\r\n        console.log(\"lista tuntee jutut\" + JSON.stringify(props));\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({items: nextProps.list, order: nextProps.order});\r\n    }\r\n\r\n    render() {\r\n      // myArray.map((val, index, array) => array[array.length - 1 - index]);\r\n      var listItems;\r\n      if (!this.state.order) {\r\n        var reversedItems = this.state.items.map(item => item).reverse();\r\n        listItems = reversedItems.map((item, index) =>\r\n        <li key={index}>\r\n          Name: {item.name} amount: {item.amount}\r\n        </li>\r\n        );\r\n      }\r\n      else {\r\n        listItems = this.state.items.map((item, index) =>\r\n        <li key={index}>\r\n            Name: {item.name} amount: {item.amount}\r\n        </li>\r\n        );\r\n      }\r\n        \r\n        if (listItems.length === 0 ) {\r\n            listItems = \"Unfortunately the name list is empty!\";\r\n        };\r\n        return(\r\n            <ul>{listItems}</ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List","import logo from './logo.svg';\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport List from './List';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoaded: false,\r\n      names: [],\r\n      ascendingOrder: false,\r\n      isFindByName: false,\r\n      inputName: '',\r\n      nameSearch: <br />,\r\n      message: \"Press a button to list the names...\"\r\n    };\r\n    this.getSortedAlphabetical = this.getSortedAlphabetical.bind(this);\r\n    this.getSortedAmounts = this.getSortedAmounts.bind(this);\r\n    this.getCount = this.getCount.bind(this);\r\n    this.findByName = this.findByName.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"appi mountattu\");\r\n    // this.getSortedAmounts();\r\n  }\r\n\r\n  // XMLHttprequest GET name list ordered by name\r\n  getSortedAlphabetical() {\r\n    this.toggleOrder();\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.addEventListener('load', () => {\r\n      let order = this.state.ascendingOrder ? 'ascending' : 'descending';\r\n      this.setState({\r\n        names: xhr.response.nameList,\r\n        message: \"The list is ordered by names in \" + order + \" order:\",\r\n        order: this.toggleOrder,\r\n        isFindByName: false,\r\n        isLoaded: true\r\n      })\r\n    })\r\n\r\n    xhr.open('GET', 'http://localhost:3000/names-by-alphabetical');\r\n    // xhr.open('GET', 'http://192.168.99.100:8080/names-by-alphabetical')\r\n    xhr.responseType = 'json';\r\n    xhr.send();\r\n  }\r\n\r\n  // XMLHttprequest GET name list ordered by amount\r\n  getSortedAmounts() {\r\n    this.toggleOrder();\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.addEventListener('load', () => {\r\n      let order = !this.state.ascendingOrder ? 'ascending' : 'descending';\r\n      this.setState({\r\n        names: xhr.response.nameList,\r\n        message: \"The list is ordered by amounts in \" + order + \" order:\",\r\n        order: this.toggleOrder,\r\n        isFindByName: false,\r\n        isLoaded: true\r\n      })\r\n    })\r\n\r\n    xhr.open('GET', 'http://localhost:3000/names-by-amount');\r\n    // xhr.open('GET', 'http://192.168.99.100:8080/names-by-amount');\r\n    xhr.responseType = 'json';\r\n    xhr.send();\r\n  }\r\n\r\n  getCount() {\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.addEventListener('load', () => {\r\n      this.setState({\r\n        names: [],\r\n        message: \"There are \" + xhr.response.count + \" names in the list.\",\r\n        isFindByName: false,\r\n        isLoaded: true\r\n      })\r\n    })\r\n\r\n    xhr.open('GET', 'http://localhost:3000/names-count');\r\n    // xhr.open('GET', 'http://192.168.99.100:8080/names-count');\r\n    xhr.responseType = 'json';\r\n    xhr.send();\r\n  }\r\n\r\n  toggleOrder() {\r\n    this.setState({\r\n      ascendingOrder: !this.state.ascendingOrder\r\n    })\r\n  }\r\n\r\n  findByName() {\r\n    this.setState({\r\n      isFindByName: true,\r\n      message: \"Write the name you want to find:\"\r\n    })\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    xhr.addEventListener('load', () => {\r\n      this.setState({\r\n        message: \"There were \" + xhr.response.count + \" people found with the name \\\"\" + this.state.value + \"\\\"\",\r\n        isLoaded: true\r\n      })\r\n    })\r\n\r\n    xhr.open('POST', 'http://localhost:3000/find-name');\r\n    // xhr.open('POST', 'http://192.168.99.100:8080/find-name');\r\n    xhr.responseType = 'json';\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    var params = \"name=\" + this.state.value;\r\n    xhr.send(params);\r\n  }\r\n\r\n  render() {\r\n    var buttons = <div className=\"buttons\">\r\n      <button onClick={this.getSortedAlphabetical}>Sort by names</button>\r\n      <button onClick={this.getSortedAmounts}>Sort by amounts</button>\r\n      <button onClick={this.getCount}>Count</button>\r\n      <button onClick={this.findByName}>Find by name</button>\r\n    </div>;\r\n    if (this.state.isFindByName) {\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          </header>\r\n          {buttons}\r\n          <h3>{this.state.message}</h3>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n              Name:\r\n              <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n            </label>\r\n            <input type=\"submit\" value=\"Submit\" />\r\n          </form>\r\n          {this.state.nameSearch}\r\n        </div>\r\n      );\r\n    }\r\n    else if (this.state.names.length === 0) {\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          </header>\r\n          {buttons}\r\n          <h3>{this.state.message}</h3>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          </header>\r\n          {buttons}\r\n          <h3>{this.state.message}</h3>\r\n          <List list={this.state.names} order={this.state.ascendingOrder} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}